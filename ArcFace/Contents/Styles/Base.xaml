<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:k="clr-namespace:ArcFaceClient.Controls" mc:Ignorable="d">
    <FontFamily x:Key="FontFamily">微软雅黑</FontFamily>
    <s:Double x:Key="FontSize">14</s:Double>
    <CornerRadius x:Key="CornerRadius">4</CornerRadius>
    <!--font icon-->
    <s:String x:Key="Icon-Max">&#xe603;</s:String>
    <s:String x:Key="Icon-Min">&#xe617;</s:String>
    <s:String x:Key="Icon-Restore">&#xe63d;</s:String>
    <s:String x:Key="Icon-Close">&#xe602;</s:String>
    <s:String x:Key="Icon-Lock">&#xe6c0;</s:String>
    <s:String x:Key="Icon-Back">&#xe679;</s:String>
    <s:String x:Key="Icon-Next">&#xe6a3;</s:String>
    <s:String x:Key="Icon-First">&#xe675;</s:String>
    <s:String x:Key="Icon-Last">&#xe600;</s:String>
    <s:String x:Key="Icon-Add">&#xe6da;</s:String>
    <s:String x:Key="Icon-Refresh">&#xe6a4;</s:String>
    <s:String x:Key="Icon-Cut">&#xe74b;</s:String>
    <s:String x:Key="Icon-Copy">&#xe706;</s:String>
    <s:String x:Key="Icon-Paste">&#xe640;</s:String>
    <s:String x:Key="Icon-Fontsize">&#xe60c;</s:String>
    <s:String x:Key="Icon-Fontcolor">&#xe629;</s:String>
    <s:String x:Key="Icon-Warning">&#xe663;</s:String>
    <s:String x:Key="Icon-Check">&#xe645;</s:String>

    <Color x:Key="PrimaryColor">#FF3F51B5</Color>
    <Color x:Key="SecondaryColor">#FFFF3152</Color>
    <Color x:Key="FontColor">#FF333333</Color>
    <Color x:Key="SecondFontColor">#FF666666</Color>
    <Color x:Key="TipFontColor">#FF999999</Color>
    <Color x:Key="MenuBackgroupColor">#FFEAECF7</Color>
    <Color x:Key="ButtonColor">#FF5378EB</Color>
    <Color x:Key="C-BgButton">#FFC4CAF5</Color>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}" />
    <SolidColorBrush x:Key="FontBrush" Color="{StaticResource FontColor}" />
    <SolidColorBrush x:Key="SecondFontBrush" Color="{StaticResource SecondFontColor}" />
    <SolidColorBrush x:Key="TipFontBrush" Color="{StaticResource TipFontColor}" />
    <SolidColorBrush x:Key="MenuBackgroupBrush" Color="{StaticResource MenuBackgroupColor}" />
    <SolidColorBrush x:Key="ButtonBrush" Color="{StaticResource ButtonColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="BgButtonBrush" Color="{StaticResource C-BgButton}"></SolidColorBrush>
    <SolidColorBrush x:Key="TextBrush" Color="#FF152937" />
    <Color x:Key="DisabledColor">#8CFFFFFF</Color>

    <!--Colors-->
    <Color x:Key="C-Background">White</Color>
    <Color x:Key="C-Border">#FFDDE2EB</Color>
    <Color x:Key="C-Foreground">#FF333333</Color>
    <Color x:Key="C-BackgroundHover">#FFE6E6E6</Color>
    <Color x:Key="C-BorderHover">#FF686B78</Color>
    <Color x:Key="C-Primary">#FF337ab7</Color>
    <Color x:Key="C-PrimaryBorder">#FF2e6da4</Color>
    <Color x:Key="C-PrimaryHover">#FF286090</Color>
    <Color x:Key="C-PrimaryBorderHover">#FF204d74</Color>
    <Color x:Key="C-Success">#FF5cb85c</Color>
    <Color x:Key="C-SuccessBorder">#FF4cae4c</Color>
    <Color x:Key="C-SuccessHover">#FF449d44</Color>
    <Color x:Key="C-SuccessBorderHover">#FF398439</Color>
    <Color x:Key="C-Info">#FF5bc0de</Color>
    <Color x:Key="C-InfoBorder">#FF46b8da</Color>
    <Color x:Key="C-InfoHover">#FF31b0d5</Color>
    <Color x:Key="C-InfoBorderHover">#FF269abc</Color>
    <Color x:Key="C-Warning">#FFf0ad4e</Color>
    <Color x:Key="C-WarningBorder">#FFeea236</Color>
    <Color x:Key="C-WarningHover">#FFec971f</Color>
    <Color x:Key="C-WarningBorderHover">#FFd58512</Color>
    <Color x:Key="C-Danger">#FFFF5873</Color>
    <Color x:Key="C-DangerBorder">#FFd43f3a</Color>
    <Color x:Key="C-DangerHover">#FFFF3152</Color>
    <Color x:Key="C-DangerBorderHover">#FFac2925</Color>
    <Color x:Key="C-BorderLine">#dde2eb</Color>

    <SolidColorBrush x:Key="C-ForegroundBrush" Color="{StaticResource C-Foreground}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-BackgroundBrush" Color="{StaticResource C-Background}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-BorderBrush" Color="{StaticResource C-Border}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-BackgroundHoverBrush" Color="{StaticResource C-BackgroundHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-BorderHoverBrush" Color="{StaticResource C-BorderHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-PrimaryBrush" Color="{StaticResource C-Primary}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-PrimaryBorderBrush" Color="{StaticResource C-PrimaryBorder}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-PrimaryHoverBrush" Color="{StaticResource C-PrimaryHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-PrimaryBorderHoverBrush" Color="{StaticResource C-PrimaryBorderHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-SuccessBrush" Color="{StaticResource C-Success}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-SuccessBorderBrush" Color="{StaticResource C-SuccessBorder}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-SuccessHoverBrush" Color="{StaticResource C-SuccessHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-SuccessBorderHoverBrush" Color="{StaticResource C-SuccessBorderHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-InfoBrush" Color="{StaticResource C-Info}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-InfoBorderBrush" Color="{StaticResource C-InfoBorder}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-InfoHoverBrush" Color="{StaticResource C-InfoHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-InfoBorderHoverBrush" Color="{StaticResource C-InfoBorderHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-WarningBrush" Color="{StaticResource C-Warning}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-WarningBorderBrush" Color="{StaticResource C-WarningBorder}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-WarningHoverBrush" Color="{StaticResource C-WarningHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-WarningBorderHoverBrush" Color="{StaticResource C-WarningBorderHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-DangerBrush" Color="{StaticResource C-Danger}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-DangerBorderBrush" Color="{StaticResource C-DangerBorder}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-DangerHoverBrush" Color="{StaticResource C-DangerHover}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-DangerBorderHoverBrush" Color="{StaticResource C-DangerBorderHover}"></SolidColorBrush>

    <!--图标字体-->
    <Style x:Key="K-Icon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Kaixin.Huiwu;component/Resources/#iconfont"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Foreground" Value="{StaticResource FontBrush}"></Setter>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"></Setter>
        <!--<Setter Property="Foreground" Value="{StaticResource FontBrush}"></Setter>-->
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
    </Style>
    <Style TargetType="Label">
        <Setter Property="FontSize" Value="{StaticResource FontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource FontBrush}"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
    <!--ToolTip-->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="5,3"></Setter>
        <Setter Property="Background" Value="{StaticResource C-BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource C-BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" Margin="1">
                        <TextBlock FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}"
                                   Margin="{TemplateBinding Margin}" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ErrorTemplate">
        <StackPanel Orientation="Vertical">
            <Grid x:Name="errorBorder" ZIndex="20">
                <Border BorderThickness="1" BorderBrush="{StaticResource C-BorderBrush}" Background="#FFFFFBE5" 
                        SnapsToDevicePixels="True"  HorizontalAlignment="Left" Margin="20,0,0,-6" CornerRadius="3">
                    <Grid Margin="12,8">
                        <Path Fill="#FFFFFBE5" Stroke="{StaticResource C-BorderBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="20,0,0,-14"
                              Data="M0,0 L5,5 L10,0"></Path>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Style="{StaticResource K-Icon}" Text="{StaticResource Icon-Warning}" FontSize="16" Margin="0,4,5,0" Foreground="{StaticResource SecondaryBrush}"></TextBlock>
                            <TextBlock MinWidth="160" TextAlignment="Left" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                                       Foreground="{StaticResource SecondaryBrush}" Margin="0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
            <Border BorderThickness="1" BorderBrush="{StaticResource SecondaryBrush}" VerticalAlignment="Top" CornerRadius="3">
                <Grid>
                    <AdornedElementPlaceholder x:Name="adorner" Margin="-1"/>
                </Grid>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:0.2" Storyboard.TargetName="errorBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:0.2" Storyboard.TargetName="errorBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--TextBox-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"></Setter>
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="{StaticResource C-BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource C-ForegroundBrush}" />
        <Setter Property="Padding" Value="3,0,3,0" />
        <Setter Property="BorderBrush" Value="{StaticResource C-BorderBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="k:AttachProperty.CornerRadius" Value="{StaticResource CornerRadius}"></Setter>
        <Setter Property="k:AttachProperty.HoverBackground" Value="{StaticResource C-BackgroundBrush}"></Setter>
        <Setter Property="k:AttachProperty.HoverBorder" Value="{StaticResource C-BorderHoverBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="PART_Bd" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding k:AttachProperty.CornerRadius}" />
                        <Grid x:Name="PART_InnerGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="PART_Icon" Style="{StaticResource K-Icon}" Text="{TemplateBinding k:AttachProperty.FontIcon}" Grid.Column="0" 
                                       Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding k:AttachProperty.FIconSize}" 
                                       Margin="{TemplateBinding k:AttachProperty.FIconMargin}"></TextBlock>
                            <Image x:Name="PART_Image" Grid.Column="0" Source="{TemplateBinding k:AttachProperty.IconImage}" Width="{TemplateBinding k:AttachProperty.IconWidth}"
                                   Height="{TemplateBinding k:AttachProperty.IconHeight}" Margin="{TemplateBinding k:AttachProperty.FIconMargin}" />
                            <!--内容区域-->
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Grid.Column="1" IsTabStop="False" Margin="2"
                                          VerticalAlignment="Stretch" Background="Transparent" />
                            <!--水印-->
                            <TextBlock x:Name="PART_Placeholder"  Padding="{TemplateBinding Padding}" Visibility="Collapsed"
                                       Text="{TemplateBinding k:AttachProperty.Watermark}" Grid.Column="1" FontSize="{TemplateBinding k:AttachProperty.WatermarkSize}"
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0.3"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2,5,2" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Placeholder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="k:AttachProperty.FontIcon" Value="">
                            <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="k:AttachProperty.IconImage" Value="{x:Null}">
                            <Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Bd" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(k:AttachProperty.HoverBorder)}"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_Bd" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(k:AttachProperty.HoverBackground)}"></Setter>
                            <Setter TargetName="PART_Bd" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(k:AttachProperty.HoverBorder)}"></Setter>
                            <Setter TargetName="PART_Placeholder" Property="Opacity" Value="0.2"></Setter>
                        </Trigger>
                        <!--不可用-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <!--只读时-->
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_Bd" Property="Opacity" Value="0.85" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.85" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--PasswordBox-->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"></Setter>
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="{StaticResource C-BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource C-ForegroundBrush}" />
        <Setter Property="Padding" Value="3,0,3,0" />
        <Setter Property="BorderBrush" Value="{StaticResource C-BorderBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--<Setter Property="k:AttachProperty.IsMonitoring" Value="True"></Setter>-->
        <Setter Property="k:AttachProperty.CornerRadius" Value="{StaticResource CornerRadius}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="PART_Bd" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding k:AttachProperty.CornerRadius}"/>
                        <Grid x:Name="PART_InnerGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="PART_Icon" Style="{StaticResource K-Icon}" Text="{TemplateBinding k:AttachProperty.FontIcon}" Grid.Column="0" 
                                       Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding k:AttachProperty.FIconSize}" 
                                       Margin="{TemplateBinding k:AttachProperty.FIconMargin}"></TextBlock>
                            <Image x:Name="PART_Image" Grid.Column="0" Source="{TemplateBinding k:AttachProperty.IconImage}" Width="{TemplateBinding k:AttachProperty.IconWidth}"
                                   Height="{TemplateBinding k:AttachProperty.IconHeight}" Margin="{TemplateBinding k:AttachProperty.FIconMargin}" />
                            <!--内容区域-->
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Grid.Column="1" IsTabStop="False" Margin="2"
                                          VerticalAlignment="Stretch" Background="{x:Null}" />
                            <!--水印-->
                            <TextBlock x:Name="PART_Placeholder"  Padding="{TemplateBinding Padding}" Visibility="Collapsed"
                                       Text="{TemplateBinding k:AttachProperty.Watermark}" Grid.Column="1"
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0.3"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2,5,2" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--显示水印-->
                        <Trigger Property="k:AttachProperty.Password" Value="">
                            <Setter TargetName="PART_Placeholder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="k:AttachProperty.FontIcon" Value="">
                            <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="k:AttachProperty.IconImage" Value="{x:Null}">
                            <Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource C-BorderHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{StaticResource C-BorderHoverBrush}"/>
                            <Setter TargetName="PART_Placeholder" Property="Opacity" Value="0.2"></Setter>
                        </Trigger>
                        <!--不可用-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Checkbox-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="k:AttachProperty.FIconMargin" Value="1,1,3,1"></Setter>
        <Setter Property="k:AttachProperty.FIconSize" Value="18"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Foreground" Value="{StaticResource SecondFontBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="PART_Root" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Background="Transparent">
                            <TextBlock x:Name="PART_Icon" Style="{StaticResource K-Icon}" Text="&#xe6d5;"
                                       Margin="{TemplateBinding k:AttachProperty.FIconMargin}"
                                       FontSize="{TemplateBinding k:AttachProperty.FIconSize}"
                                       Foreground="{TemplateBinding Foreground}"></TextBlock>
                            <ContentPresenter VerticalAlignment="Center" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Icon" Property="Text" Value="&#xe6d6;"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource FontBrush}"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsChecked" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource C-BorderHoverBrush}"></Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type k:BulletCheckBox}">
        <Setter Property="Background" Value="#FFDEE2EB"></Setter>
        <Setter Property="Foreground" Value="{StaticResource C-BackgroundBrush}"></Setter>
        <Setter Property="OnForeground" Value="{StaticResource C-BackgroundBrush}"></Setter>
        <Setter Property="OnBackground" Value="{StaticResource ButtonBrush}"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Width" Value="55"></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type k:BulletCheckBox}">
                    <Viewbox Stretch="Uniform"  VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Border x:Name="PART_Border" Width="55" Height="28" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                Margin="{TemplateBinding Margin}" CornerRadius="14">
                            <StackPanel Orientation="Horizontal">
                                <!--状态球-->
                                <Border x:Name="PART_State" Width="24" Height="24" Margin="3,2,1,2" CornerRadius="12" SnapsToDevicePixels="True"
                                        Background="{TemplateBinding Foreground}">
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="PART_TransState" X="0"></TranslateTransform>
                                    </Border.RenderTransform>
                                </Border>
                                <!--文本框--><!--
                                <TextBlock Width="40" Foreground="{TemplateBinding Foreground}" x:Name="PART_Text" Text="{TemplateBinding Off}" VerticalAlignment="Center" TextAlignment="Center">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="PART_TransTxt" X="0"></TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>-->
                            </StackPanel>
                        </Border>
                    </Viewbox>

                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=On}" TargetName="PART_Text"/>-->
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=OnForeground}" TargetName="PART_State"/>
                            <!--<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=OnForeground}" TargetName="PART_Text"/>-->
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=OnBackground}" TargetName="PART_Border"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_TransState" Storyboard.TargetProperty="X" To="27" Duration="0:0:0.2" />
                                        <!--<DoubleAnimation Storyboard.TargetName="PART_TransTxt" Storyboard.TargetProperty="X" To="-24" Duration="0:0:0.2" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_TransState" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2" />
                                        <!--<DoubleAnimation Storyboard.TargetName="PART_TransTxt" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.45" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--RadioButton-->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="k:AttachProperty.FIconMargin" Value="1,1,3,1"></Setter>
        <Setter Property="k:AttachProperty.FIconSize" Value="18"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="5,0,5,0"></Setter>
        <Setter Property="Foreground" Value="{StaticResource SecondFontBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="PART_Root" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Background="Transparent">
                            <TextBlock x:Name="PART_Icon" Style="{StaticResource K-Icon}" Text="&#xe6d7;"
                                       Margin="{TemplateBinding k:AttachProperty.FIconMargin}"
                                       FontSize="{TemplateBinding k:AttachProperty.FIconSize}"
                                       Foreground="{TemplateBinding Foreground}"></TextBlock>
                            <ContentPresenter VerticalAlignment="Center" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Icon" Property="Text" Value="&#xe75b;"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource FontBrush}"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsChecked" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource C-BorderHoverBrush}"></Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--下拉按钮-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <TextBox Cursor="Hand" IsReadOnly="True" Width="{TemplateBinding Width}" TextAlignment="Center" Margin="0,0,18,0"
                                 BorderThickness="0" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content}" 
                                 Focusable="False" Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Height}" Background="Transparent"></TextBox>
                        <Border HorizontalAlignment="Right" Margin="2" Padding="5,0,5,0" Background="{TemplateBinding Background}" BorderThickness="0">
                            <Path Name="PathFill" Fill="{StaticResource FontBrush}" Width="8" Height="5" StrokeThickness="0" Data="M4,0 L8,5 L0,5 z" 
                                  RenderTransformOrigin="0.5,0.5" Stretch="Fill" SnapsToDevicePixels="True">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform x:Name="PART_TransPath" Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PathFill" Property="Fill" Value="{StaticResource SecondFontBrush}"></Setter>-->
                            <!--<Setter TargetName="Back" Property="Background" Value="{StaticResource C-BackgroundBrush}"></Setter>-->
                            <!--<Setter TargetName="Back" Property="BorderBrush" Value="{StaticResource FontBrush}"></Setter>-->
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_TransPath" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_TransPath" Storyboard.TargetProperty="Angle"  To="180" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Combox-->
    <Color x:Key="ComboBoxBorderColor">#FFE3E3E3</Color>
    <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="{StaticResource ComboBoxBorderColor}"></SolidColorBrush>
    <Style TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="MinWidth" Value="40"></Setter>
        <Setter Property="Height" Value="32"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="k:AttachProperty.CornerRadius" Value="3"></Setter>
        <Setter Property="Background" Value="{StaticResource C-BackgroundBrush}"></Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="28"></Setter>
                    <Setter Property="MinWidth" Value="40"></Setter>
                    <Setter Property="Cursor" Value="Hand"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="{StaticResource C-BackgroundBrush}">
                                    <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="8,0,0,0"></ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource C-BackgroundHoverBrush}"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource C-BackgroundHoverBrush}"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="{StaticResource C-BackgroundBrush}">
                        <Border x:Name="PART_Border" BorderThickness="1" BorderBrush="{StaticResource ComboBoxBorderBrush}" Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding k:AttachProperty.CornerRadius}">
                            <ToggleButton Style="{StaticResource ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ClickMode="Press" Focusable="False" Height="{TemplateBinding Height}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}"
                                          Content="{TemplateBinding Text}" HorizontalContentAlignment="Center">
                            </ToggleButton>
                        </Border>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom"  x:Name="Popup" 
                               Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" VerticalOffset="3">
                            <Border CornerRadius="{TemplateBinding k:AttachProperty.CornerRadius}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" 
                                    x:Name="DropDown" SnapsToDevicePixels="True" Background="{StaticResource C-BackgroundBrush}" BorderThickness="1"
                                    BorderBrush="{StaticResource ComboBoxBorderBrush}" Margin="2" >
                                <Border.Effect>
                                    <DropShadowEffect Color="{StaticResource C-BorderHover}" BlurRadius="2" RenderingBias="Performance" ShadowDepth="0" Opacity="0.5"/>
                                </Border.Effect>
                                <ScrollViewer Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                              SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="{StaticResource C-BackgroundBrush}"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条-->
    <s:Double x:Key="ScrollBarSize">12</s:Double>
    <!--滚动两边按钮样式-->
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource FontBrush}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="auto"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <TextBlock x:Name="PART_Icon" FontSize="12" Text="{TemplateBinding k:AttachProperty.FontIcon}" Margin="1"
                               Style="{StaticResource K-Icon}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SecondFontBrush}" TargetName="PART_Icon"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SecondFontBrush}" TargetName="PART_Icon"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" TargetName="PART_Icon"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条滑块两边按钮样式-->
    <Style x:Key="ScrollBarTrackButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条滑块样式-->
    <ControlTemplate x:Key="ThumbTemplate" TargetType="Thumb">
        <Grid>
            <Border  x:Name="PART_Bg" CornerRadius="4" Margin="2" SnapsToDevicePixels="True" Background="{StaticResource TipFontBrush}">
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondFontBrush}" TargetName="PART_Bg"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" TargetName="PART_Bg"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--水平滚滚动条模板-->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="HorizontalRoot" Height="{TemplateBinding Height}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--内部背景-->
            <Border x:Name="BgInner" Grid.Column="1" Margin="0" SnapsToDevicePixels="True" Opacity="0.3"  CornerRadius="6" Background="{StaticResource TipFontBrush}"/>
            <!--左按钮-->
            <Border Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <RepeatButton  k:AttachProperty.FontIcon="&#xe679;"  Style="{StaticResource ScrollBarButton}" x:Name="HorizontalSmallDecrease"
                               IsTabStop="False" Interval="50" Margin="0,1,0,0" Command="ScrollBar.LineLeftCommand"/>
            </Border>
            <!--中间滑动区域-->
            <Track x:Name="PART_Track" IsDirectionReversed="False" Grid.Column="1">
                <!--左滑块-->
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeDecrease" Command="ScrollBar.PageLeftCommand"
                                  IsTabStop="False" Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Template="{StaticResource ThumbTemplate}" />
                </Track.Thumb>
                <!--右滑块-->
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeIncrease" Command="ScrollBar.PageRightCommand"
                                  IsTabStop="False"  Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <!--右按钮-->
            <Border Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                <RepeatButton k:AttachProperty.FontIcon="&#xe6a3;"  Style="{StaticResource ScrollBarButton}"
                              IsTabStop="False" Interval="50" Margin="0,1,0,0" Command="ScrollBar.LineRightCommand"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BgInner" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--垂直滚滚动条模板-->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="VerticalRoot" Height="{TemplateBinding Height}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--内部背景-->
            <Border x:Name="BgInner" Grid.Row="1" Margin="0" CornerRadius="6" SnapsToDevicePixels ="True" Opacity="0.3"  Background="{StaticResource TipFontBrush}"/>
            <!--上按钮-->
            <Border Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="VerticalSmallDecrease">
                <RepeatButton k:AttachProperty.FontIcon="&#xe6de;"  Style="{StaticResource ScrollBarButton}"
                              IsTabStop="False" Interval="50" Margin="0" Command="ScrollBar.LineUpCommand"/>
            </Border>
            <!--中间滑动区域-->
            <Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
                <!--上滑块-->
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeDecrease" Command="ScrollBar.PageUpCommand" 
                                  IsTabStop="False" Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.DecreaseRepeatButton>
                <!--中间滑块-->
                <Track.Thumb>
                    <Thumb Template="{StaticResource ThumbTemplate}" MinHeight="10"/>
                </Track.Thumb>
                <!--下滑块-->
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeIncrease" Command="ScrollBar.PageDownCommand"
                                  IsTabStop="False" Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <!--下按钮-->
            <Border Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="VerticalSmallIncrease">
                <RepeatButton k:AttachProperty.FontIcon="&#xe661;"  Style="{StaticResource ScrollBarButton}"
                              IsTabStop="False" Interval="50" Margin="0" Command="ScrollBar.LineDownCommand"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BgInner" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ScrollBar样式-->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                <Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                <Setter Property="Width" Value="{StaticResource ScrollBarSize}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ScrollViewer样式-->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" x:Name="leftColumn" />
                            <ColumnDefinition Width="Auto" x:Name="rightColumn" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                Grid.Row="0" Grid.Column="0" />
                        <!--垂直滚动条 -->
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <!--水平底部滚动条-->
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0" Orientation="Horizontal" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--解决图片空间渲染模糊的问题-->
    <Style TargetType="Image">
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"></Setter>
    </Style>

    <!--默认Menu样式-->

    <!--菜单项MenuItem样式FIconMenuItem-->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="3,0"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="k:AttachProperty.FIconSize" Value="22"/>
        <Setter Property="k:AttachProperty.HoverBackground" Value="{StaticResource MenuBackgroupBrush}"/>
        <Setter Property="k:AttachProperty.HoverBorder" Value="{StaticResource FontBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Item-->
                    <Border  x:Name="PART_Border" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" 
                             BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                             CornerRadius="{TemplateBinding k:AttachProperty.CornerRadius}">
                        <Grid VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition MaxWidth="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                            </Grid.ColumnDefinitions>
                            <!--Icon-->
                            <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Margin="0,0,3,0"
                                       FontSize="{TemplateBinding k:AttachProperty.FIconSize}" Style="{StaticResource K-Icon}"/>
                            <!--Header-->
                            <ContentPresenter Grid.Column="1" x:Name="txtHeader" RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"></ContentPresenter>
                            <!--快捷键 InputGestureText 暂不支持你了 -->
                            <TextBlock Grid.Column="2" Margin="3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                       FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" Visibility="Visible" Foreground="{TemplateBinding Foreground}" />
                            <!--右指针-->
                            <TextBlock x:Name="PART_Arrow" Grid.Column="3" Text="&#xe6a3;" Foreground="{TemplateBinding Foreground}" 
                                       FontSize="14" Style="{StaticResource K-Icon}"/>
                            <!--淡出子集菜单容器-->
                            <Popup Grid.Column="0" Grid.ColumnSpan="4" x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Placement="Bottom" Focusable="false" VerticalOffset="8"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border Background="{StaticResource C-BackgroundBrush}" CornerRadius="0" Margin="5" BorderBrush="{StaticResource C-BorderBrush}" BorderThickness="1">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <Path Data="M0,4 L6,0 L12,4" Stroke="{StaticResource C-BorderBrush}" Fill="{StaticResource C-BackgroundBrush}" Margin="5,-4,0,0"></Path>
                                        <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Icon}" Value="">
                            <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=InputGestureText}" Value="">
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <!--TopLevelHeader:第一级菜单（有子菜单）-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--TopLevelItem 第一级菜单（无子级）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--SubmenuHeader:子菜单，有子菜单-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                            <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                        </Trigger>
                        <!--SubMenuItem:子菜单，无子级-->
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                        </Trigger>
                        <!--选中状态，优先级将高于Icon-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Icon" Value="&#xe645;" Property="Text"></Setter>
                            <Setter TargetName="PART_Icon" Value="14" Property="FontSize"></Setter>
                            <Setter TargetName="PART_Icon" Value="{StaticResource C-SuccessBrush}" Property="Foreground"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Border" Value="0.3" Property="Opacity"></Setter>
                        </Trigger>
                        <!--高亮状态-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(k:AttachProperty.HoverBackground)}"></Setter>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(k:AttachProperty.HoverBorder)}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(k:AttachProperty.HoverBackground)}"></Setter>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(k:AttachProperty.HoverBorder)}"></Setter>
                        </Trigger>
                        <!--子菜单打开状态-->
                        <Trigger Property="IsSubmenuOpen" Value="true" >
                            <Setter TargetName="PART_Arrow" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(k:AttachProperty.HoverBorder)}" Property="Foreground"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Menu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--默认右键菜单ContextMenu样式-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="BorderBrush" Value="{StaticResource C-BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource C-BackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <!--<Setter TargetName="Border" Property="Effect" Value="{StaticResource DefaultDropShadow}"></Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--文本操作右键菜单-->
    <ContextMenu x:Key="TextBoxContextMenu" Style="{StaticResource {x:Type ContextMenu}}">
        <MenuItem Command="ApplicationCommands.Cut" Icon="{StaticResource Icon-Cut}" Style="{DynamicResource {x:Type MenuItem}}" />
        <MenuItem Command="ApplicationCommands.Copy" Icon="{StaticResource Icon-Copy}" Style="{DynamicResource {x:Type MenuItem}}" />
        <MenuItem Command="ApplicationCommands.Paste" Icon="{StaticResource Icon-Paste}" Style="{DynamicResource {x:Type MenuItem}}" />
    </ContextMenu>

    <!--日历-->
    <Style TargetType="Calendar" x:Key="CalendarStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="#333333" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>